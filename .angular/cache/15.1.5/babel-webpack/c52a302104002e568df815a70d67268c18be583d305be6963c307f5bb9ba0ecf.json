{"ast":null,"code":"import { NgZone } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"image\"];\nexport class ScrollPointComponent {\n  constructor(ngZone) {\n    this.ngZone = ngZone;\n    this.typescript = `\n    import { fromEvent, Observable } from \"rxjs\";\n    import { debounceTime, map } from \"rxjs/operators\";\n\n    scrollEvent$ = fromEvent(window, 'wheel');\n\n    getEvent(): Observable<WheelEvent | Event> {\n      return this.scrollEvent$.pipe(\n        map((event) => event),\n        debounceTime(50)\n      );\n    }\n  `;\n    this.inViewport = false;\n    this.cards = ['@angular/animations is installed by default', \"import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\", 'Animation provides the illusion of motion: HTML elements change styling over time', 'Well-designed animations can make your application more fun and straightforward to use', 'Motion greatly enhances the user experience', \"Angular's animation system is built on CSS functionality\"];\n    this.scrollEvent$ = fromEvent(window, 'scroll').pipe(debounceTime(30));\n  }\n  get slideState() {\n    return this.inViewport ? 'visible' : 'hidden';\n  }\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      // Angular triggers Change Detection every time when async operation (setTimeout/setInterval) ticks,\n      // or if promise has been resolved\n      // or when DOM event happens and it has some handler (this case).\n      // Inside runOutsideAngular callback, events which are usually triggering CD\n      // will not do it anymore, so you can improve performance of your app in this case.\n      this.scrollEvent$.subscribe(() => {\n        this.ngZone.run(() => {\n          this.inViewport = this.isInViewport(this.image.nativeElement);\n        });\n      });\n    });\n  }\n  isInViewport(el) {\n    const {\n      top,\n      bottom\n    } = el.getBoundingClientRect();\n    return top <= 800 && bottom >= 300;\n  }\n  toggleSlide() {\n    this.inViewport = !this.inViewport;\n  }\n}\nScrollPointComponent.ɵfac = function ScrollPointComponent_Factory(t) {\n  return new (t || ScrollPointComponent)(i0.ɵɵdirectiveInject(NgZone));\n};\nScrollPointComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ScrollPointComponent,\n  selectors: [[\"app-scroll-point\"]],\n  viewQuery: function ScrollPointComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.image = _t.first);\n    }\n  },\n  decls: 11,\n  vars: 2,\n  consts: [[1, \"two\"], [1, \"content\"], [1, \"header\"], [1, \"title\", \"left\", \"top\"], [1, \"wrapper\"], [1, \"card\"], [\"src\", \"assets/angular-logo.svg\", \"alt\", \"angular-logo\"], [\"image\", \"\"]],\n  template: function ScrollPointComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n      i0.ɵɵtext(4, \"Scroll point animation\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"code\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 5);\n      i0.ɵɵelement(9, \"img\", 6, 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate(ctx.typescript);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"@scrolling\", ctx.slideState);\n    }\n  },\n  styles: [\"section.two[_ngcontent-%COMP%]{background-image:linear-gradient(to right bottom,rgba(214,7,7,.6),rgba(214,7,7,.7))}section.two[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{color:#fff}section.two[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{width:80%;max-width:800px;margin:auto}section.two[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{display:flex}section.two[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   code[_ngcontent-%COMP%]{white-space:pre;color:#fff;background:transparent}section.two[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   div.wrapper[_ngcontent-%COMP%]{margin-left:auto;max-width:550px}section.two[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]{width:180px;margin-top:20px}\"],\n  data: {\n    animation: [trigger('scrolling', [state('*', style({\n      opacity: 0,\n      transform: 'translateX(-200%)'\n    })), state('visible', style({\n      opacity: '*' // opacity is 1.0 by default\n    })), state('hidden', style({\n      opacity: 0.1\n    })), transition('visible => hidden', animate('500ms ease-out')), transition('hidden => visible', animate('200ms ease-in'))])]\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}